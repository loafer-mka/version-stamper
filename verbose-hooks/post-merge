#!/bin/sh
# +--------------------------------------------------------------------+
# | This Source Code Form is subject to the terms of the Mozilla       |
# | Public License, v. 2.0. If a copy of the MPL was not distributed   |
# | with this file, You can obtain one at http://mozilla.org/MPL/2.0/. |
# +--------------------------------------------------------------------+
#
# This hook is invoked by git-merge, which happens when a git pull is done on a
# local repository. The hook takes a single parameter, a status flag specifying
# whether or not the merge being done was a squash merge.
# This hook cannot affect the outcome of git merge and is not executed,
# if the merge failed due to conflicts.
#

export STAMPER_SUITE="Version suite v0.9-23.unit-tests"
# note: the STAMPER_SUITE is a signature of script; setup will detect it as part of version suite using given text
#

echo ">>>>>> POST-MERGE '$@'" 1>&2
if [ -f ".git/MERGE_MSG" ]; then
	echo ">>>>>> .git/MERGE_MSG:" 1>&2
	cat .git/MERGE_MSG 1>&2
else
	echo ">>>>>> .git/MERGE_MSG (NOT FOUND)" 1>&2
fi
if [ -f ".git/ORIG_HEAD" ]; then
	echo ">>>>>> .git/ORIG_HEAD:" 1>&2
	cat .git/ORIG_HEAD 1>&2
else
	echo ">>>>>> .git/ORIG_HEAD (NOT FOUND)" 1>&2
fi
if [ -f ".git/MERGE_HEAD" ]; then
	echo ">>>>>> .git/MERGE_HEAD:" 1>&2
	cat .git/MERGE_HEAD 1>&2
else
	echo ">>>>>> .git/MERGE_HEAD (NOT FOUND)" 1>&2
fi
if [ -f ".git/MERGE_MODE" ]; then
	echo ">>>>>> .git/MERGE_MODE:" 1>&2
	cat .git/MERGE_MODE 1>&2
else
	echo ">>>>>> .git/MERGE_MODE (NOT FOUND)" 1>&2
fi

VERSION_TEXT="$("./../../../version-stamper" --git-hook=post-merge --generate)"
RETVAL=$?
if [ "1" != "$1" ]; then
	# "$1" == "1" means squash merge;
	# do not make commit for squash - it will be made manually later
	# (squash merge does not execute commit yet)
echo ">>>>>> git diff --cached --quiet" 1>&2
	if ! git --no-pager diff --cached --quiet >/dev/null 2>&1; then
		# there are some indexed changes, create new commit now
echo ">>>>>> git commit --amend --message \"${VERSION_TEXT} \$(cat .git/MERGE_MSG |sed -e '/^\s*#/d')\"" 1>&2
		git --no-pager -c core.hookspath=/dev/null commit --no-verify --amend --message "${VERSION_TEXT} $(cat .git/MERGE_MSG 2>/dev/null |sed -e '/^\s*#/d')"
	fi
fi
exit $RETVAL
