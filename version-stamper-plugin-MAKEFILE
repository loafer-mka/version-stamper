# +--------------------------------------------------------------------+
# | This Source Code Form is subject to the terms of the Mozilla       |
# | Public License, v. 2.0. If a copy of the MPL was not distributed   |
# | with this file, You can obtain one at http://mozilla.org/MPL/2.0/. |
# +--------------------------------------------------------------------+
#        email: Andrey Makarov <mka-at-mailru@mail.ru>
# Project home: https://github.com/loafer-mka/version-stamper.git
#
#               Copyright (c) Andrey Makarov 2023

function __PLUGIN_MAKEFILE_NOTICE__
{
	echo "   plugin-MAKEFILE    Makefile; eol=LF"
}

function __PLUGIN_MAKEFILE_SAMPLE__
{
	echo "#plugin-MAKEFILE: --gitignore  version.mk"
}

function __PLUGIN_MAKEFILE_ATTRIB__
{
	echo "text eol=lf"
}

function __PLUGIN_MAKEFILE_GETVER__
{
	# note: use strong name compare (${NAME_VERSION_TEXT} rather than \w*VERSION_TEXT\w*)
	# so changing version or changing leader/trailer must lead to rewrite target file.
	sed --binary --regexp-extended --silent \
		-e "s/^(\s*${NAME_VERSION_TEXT}\s*:=\s*)([^ \t\r\n]*)(\s*)$/\\2/p"
}

function __PLUGIN_MAKEFILE_CREATE__
{
	__STORE_LF__ "$1" <<-END_OF_TEXT

		${NAME_VERSION_ID} := ${VERSION_ID}
		${NAME_VERSION_TEXT} := ${VERSION_TEXT}
		${NAME_VERSION_DATE} := ${VERSION_DATE}
		${NAME_VERSION_SHORTDATE} := ${VERSION_SHORTDATE}
		${NAME_VERSION_UNIXTIME} := ${VERSION_UNIXTIME}
		${NAME_VERSION_BRANCH} := ${VERSION_BRANCH}${VERSION_DIRTY}
		${NAME_VERSION_HOSTINFO} := ${VERSION_HOSTINFO}
		${NAME_VERSION_AUTHORSHIP} := ${VERSION_AUTHORSHIP}
		${NAME_VERSION_DECLARATION} := ${VERSION_DECLARATION}
		${NAME_VERSION_COMMIT_AUTHOR} := ${VERSION_COMMIT_AUTHOR} <${VERSION_COMMIT_EMAIL}>
		# if information below is based on parent commit's hash then prefix 'p:' will be used
		${NAME_VERSION_SHA_SHORT} := ${VERSION_SHA_SHORT}
		${NAME_VERSION_SHA_LONG} := ${VERSION_SHA_LONG}

END_OF_TEXT
}

function __PLUGIN_MAKEFILE_MODIFY__
{
	local text branch date hostinfo authorship declaration commit
	__AS_REGEX_OUT__ declaration "${VERSION_DECLARATION}"
	
	sed --binary --regexp-extended \
		-e "s/^(\s*)(\w*VERSION_ID\w*)(\s*:=\s*)([0-9A-Fa-f]+)(\s*)$/\\1${NAME_VERSION_ID}\\3${VERSION_ID}\\5/" \
		-e "s/^(\s*)(\w*VERSION_TEXT\w*)(\s*:=\s*)([^ \t\r\n]+)(\s*)$/\\1${NAME_VERSION_TEXT}\\3${VERSION_TEXT//\//\\\/}/" \
		-e "s/^(\s*)(\w*VERSION_BRANCH\w*)(\s*:=\s*)([^ \t\r\n]+)(\s*)$/\\1${NAME_VERSION_BRANCH}\\3${VERSION_BRANCH//\//\\\/}${VERSION_DIRTY}/" \
		-e "s/^(\s*)(\w*VERSION_DATE\w*)(\s*:=\s*)([0-9][0-9: -/]+)(.*)$/\\1${NAME_VERSION_DATE}\\3${VERSION_DATE//\//\\\/}\\5/" \
		-e "s/^(\s*)(\w*VERSION_SHORTDATE\w*)(\s*:=\s*)([0-9]+)(.*)$/\\1${NAME_VERSION_SHORTDATE}\\3${VERSION_SHORTDATE}\\5/" \
		-e "s/^(\s*)(\w*VERSION_UNIXTIME\w*)(\s*:=\s*)([0-9]+)(.*)$/\\1${NAME_VERSION_UNIXTIME}\\3${VERSION_UNIXTIME}\\5/" \
		-e "s/^(\s*)(\w*VERSION_HOSTINFO\w*)(\s*:=\s*)(.*)$/\\1${NAME_VERSION_HOSTINFO}\\3${VERSION_HOSTINFO//\//\\\/}/" \
		-e "s/^(\s*)(\w*VERSION_AUTHORSHIP\w*)(\s*:=\s*)(.*)$/\\1${NAME_VERSION_AUTHORSHIP}\\3${VERSION_AUTHORSHIP//\//\\\/}/" \
		-e "s/^(\s*)(\w*VERSION_DECLARATION\w*)(\s*:=\s*)(.*)$/\\1${NAME_VERSION_DECLARATION}\\3${declaration}/" \
		-e "s/^(\s*)(\w*VERSION_COMMIT_AUTHOR\w*)(\s*:=\s*)(.*)$/\\1${NAME_VERSION_COMMIT_AUTHOR}\\3${VERSION_COMMIT_AUTHOR//\//\\\/} <${VERSION_COMMIT_EMAIL//\//\\\/}>/" \
		-e "s/^(\s*)(\w*VERSION_SHA_SHORT\w*)(\s*:=\s*)([0-9a-fA-F+]+)(.*)$/\\1${NAME_VERSION_SHA_SHORT}\\3${VERSION_SHA_SHORT}\\5/" \
		-e "s/^(\s*)(\w*VERSION_SHA_LONG\w*)(\s*:=\s*)([0-9a-fA-F+]+)(.*)$/\\1${NAME_VERSION_SHA_LONG}\\3${VERSION_SHA_LONG}\\5/" \
	| __STORE_LF__ "$1"
}
