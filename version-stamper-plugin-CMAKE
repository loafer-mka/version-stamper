# +--------------------------------------------------------------------+
# | This Source Code Form is subject to the terms of the Mozilla       |
# | Public License, v. 2.0. If a copy of the MPL was not distributed   |
# | with this file, You can obtain one at http://mozilla.org/MPL/2.0/. |
# +--------------------------------------------------------------------+
#        email: Andrey Makarov <mka-at-mailru@mail.ru>
# Project home: https://github.com/loafer-mka/version-stamper.git
#
#               Copyright (c) Andrey Makarov 2024

function __PLUGIN_CMAKE_NOTICE__
{
	echo "   plugin-CMAKE      cmake-style variables, normally version file is .cmake; eol=native"
}

function __PLUGIN_CMAKE_SAMPLE__
{
	echo "#plugin-CMAKE:    --gitignore  version.cmake"
}

function __PLUGIN_CMAKE_ATTRIB__
{
	echo "text"
}

function __PLUGIN_CMAKE_GETVER__
{
	# strong name compare here - so changing version or changing leader/trailer will lead to rewrite target file
	sed --binary --regexp-extended --silent \
		-e "s/^(\s*set\(\s*\w*VERSION_TEXT\w*\s+\")(.*)(\"\s*\).*)$/\\2/p"
}

function __PLUGIN_CMAKE_CREATE__
{
	__STORE_NATIVE_EOL__ "$1" <<END_OF_TEXT
if( NOT DEFINED	__${VERSION_LEADER}VERSION_GUARD${VERSION_TRAILER}_CMAKE__ )
	set( __${VERSION_LEADER}VERSION_GUARD${VERSION_TRAILER}_CMAKE__ 1 )
	set( ${NAME_VERSION_ID}            "${VERSION_ID}" )
	set( ${NAME_VERSION_TEXT}          "${VERSION_TEXT}" )
	set( ${NAME_VERSION_DATE}          "${VERSION_DATE}" )
	set( ${NAME_VERSION_SHORTDATE}     "${VERSION_SHORTDATE}" )
	set( ${NAME_VERSION_UNIXTIME}      "${VERSION_UNIXTIME}" )
	set( ${NAME_VERSION_BRANCH}        "${VERSION_BRANCH}${VERSION_DIRTY}" )
	set( ${NAME_VERSION_HOSTINFO}      "${VERSION_HOSTINFO//\"/\\\"}" )
	set( ${NAME_VERSION_AUTHORSHIP}    "${VERSION_AUTHORSHIP//\"/\\\"}" )
	set( ${NAME_VERSION_DECLARATION}   "${VERSION_DECLARATION//\"/\\\"}" )
	set( ${NAME_VERSION_COMMIT_AUTHOR} "${VERSION_COMMIT_AUTHOR//\"/\\\"} <${VERSION_COMMIT_EMAIL//\"/\\\"}>" )
#   if information below is based on parent commit's hash then prefix 'p:' will be used
	set( ${NAME_VERSION_SHA_SHORT}     "${VERSION_SHA_SHORT}" )
	set( ${NAME_VERSION_SHA_LONG}      "${VERSION_SHA_LONG}" )
endif()
END_OF_TEXT
}

function __PLUGIN_CMAKE_MODIFY__
{
	sed --binary --regexp-extended \
		-e "s/^([[:space:]a-zA-Z(]+)__(\w*VERSION_GUARD\w*)_CMAKE__(\s*.*\).*)$/\\1__${VERSION_LEADER}VERSION_GUARD${VERSION_TRAILER}_CMAKE__\\3/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_ID\w*)(\s+)(\"[0-9A-Fa-f]+\")(\s*\).*)$/\\1${NAME_VERSION_ID}\\3\"${VERSION_ID}\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_TEXT\w*)(\s+)(\".*\")(\s*\).*)$/\\1${NAME_VERSION_TEXT}\\3\"$(__AS_REGEX_DQ__ "${VERSION_TEXT}")\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_BRANCH\w*)(\s+)(\".*\")(\s*\).*)$/\\1${NAME_VERSION_BRANCH}\\3\"$(__AS_REGEX_DQ__ "${VERSION_BRANCH}${VERSION_DIRTY}")\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_DATE\w*)(\s+)(\".*\")(\s*\).*)$/\\1${NAME_VERSION_DATE}\\3\"${VERSION_DATE}\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_SHORTDATE\w*)(\s+)(\"[0-9]+\")(\s*\).*)$/\\1${NAME_VERSION_SHORTDATE}\\3\"${VERSION_SHORTDATE}\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_UNIXTIME\w*)(\s+)(\"[0-9]+\")(\s*\).*)$/\\1${NAME_VERSION_UNIXTIME}\\3\"${VERSION_UNIXTIME}\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_HOSTINFO\w*)(\s+)(\".*\")(\s*\).*)$/\\1${NAME_VERSION_HOSTINFO}\\3\"$(__AS_REGEX_DQ__ "${VERSION_HOSTINFO}")\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_AUTHORSHIP\w*)(\s+)(\".*\")(\s*\).*)$/\\1${NAME_VERSION_AUTHORSHIP}\\3\"$(__AS_REGEX_DQ__ "${VERSION_AUTHORSHIP}")\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_DECLARATION\w*)(\s+)(\".*\")(\s*\).*)$/\\1${NAME_VERSION_DECLARATION}\\3\"$(__AS_REGEX_DQ__ "${VERSION_DECLARATION}")\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_COMMIT_AUTHOR\w*)(\s+)(\".*\")(\s*\).*)$/\\1${NAME_VERSION_COMMIT_AUTHOR}\\3\"$(__AS_REGEX_DQ__ "${VERSION_COMMIT_AUTHOR} <${VERSION_COMMIT_EMAIL}>")\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_SHA_SHORT\w*)(\s+)(\".*\")(\s*\).*)$/\\1${NAME_VERSION_SHA_SHORT}\\3\"${VERSION_SHA_SHORT}\"\\5/" \
		-e "s/^(\s*set\(\s*)(\w*VERSION_SHA_LONG\w*)(\s+)(\".*\")(\s*\).*)$/\\1${NAME_VERSION_SHA_LONG}\\3\"${VERSION_SHA_LONG}\"\\5/" \
	| __STORE_NATIVE_EOL__ "$1"
}
