# +--------------------------------------------------------------------+
# | This Source Code Form is subject to the terms of the Mozilla       |
# | Public License, v. 2.0. If a copy of the MPL was not distributed   |
# | with this file, You can obtain one at http://mozilla.org/MPL/2.0/. |
# +--------------------------------------------------------------------+
#        email: Andrey Makarov <mka-at-mailru@mail.ru>
# Project home: https://github.com/loafer-mka/version-stamper.git
#
#               Copyright (c) Andrey Makarov 2023

function __PLUGIN_C_NOTICE__
{
	echo "   plugin-C          C-style defines, normally version file is .h; eol=native"
}

function __PLUGIN_C_SAMPLE__
{
	echo "#plugin-C:        --gitignore  version.h"
}

function __PLUGIN_C_ATTRIB__
{
	echo "text"
}

function __PLUGIN_C_GETVER__
{
	# note: use strong name compare (${NAME_VERSION_TEXT} rather than \w*VERSION_TEXT\w*)
	# so changing version or changing leader/trailer must lead to rewrite target file.
	sed --binary --regexp-extended --silent \
		-e "s/^(\s*#\s*define\s+${NAME_VERSION_TEXT}\s+\")(.*)(\".*)$/\\2/p"
}

function __PLUGIN_C_CREATE__
{
	__STORE_NATIVE_EOL__ "$1" <<-END_OF_TEXT
		#ifndef	__${NAME_VERSION_LEADER}VERSION_GUARD${NAME_VERSION_TRAILER}_H__
		#	define	__${NAME_VERSION_LEADER}VERSION_GUARD${NAME_VERSION_TRAILER}_H__
		#	define	${NAME_VERSION_ID}            0x${VERSION_ID}L
		#	define	${NAME_VERSION_TEXT}          "${VERSION_TEXT_QUOTED}"
		#	define	${NAME_VERSION_DATE}          "${VERSION_DATE_QUOTED}"
		#	define	${NAME_VERSION_SHORTDATE}     "${VERSION_SHORTDATE}"
		#	define	${NAME_VERSION_UNIXTIME}      ${VERSION_UNIXTIME}LL
		#	define	${NAME_VERSION_BRANCH}        "${VERSION_BRANCH_QUOTED}${VERSION_DIRTY}"
		#	define	${NAME_VERSION_HOSTINFO}      "${VERSION_HOSTINFO_QUOTED}"
		#	define	${NAME_VERSION_AUTHORSHIP}    "${VERSION_AUTHORSHIP_QUOTED}"
		#	define	${NAME_VERSION_DECLARATION}   "${VERSION_DECLARATION_QUOTED}"
		#	define	${NAME_VERSION_COMMIT_AUTHOR} "${VERSION_COMMIT_AUTHOR_QUOTED} <${VERSION_COMMIT_EMAIL_QUOTED}>"
		// if information below is based on parent commit's hash then prefix 'p:' will be used
		#	define	${NAME_VERSION_SHA_SHORT}     "${VERSION_SHA_SHORT}"
		#	define	${NAME_VERSION_SHA_LONG}      "${VERSION_SHA_LONG}"
		#endif
END_OF_TEXT
}

function __PLUGIN_C_MODIFY__
{
	sed --binary --regexp-extended \
		-e "s/^(\s*#\s*\w.+\s+)__(\w*VERSION_GUARD\w*)_H__(.*)$/\\1__${NAME_VERSION_LEADER}VERSION_GUARD${NAME_VERSION_TRAILER}_H__\\3/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_ID\w*)(\s+)(0x[0-9A-Fa-f]+L?|[0-9]*L?)(.*)$/\\1${NAME_VERSION_ID}\\30x${VERSION_ID}L\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_TEXT\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_TEXT}\\3\"${VERSION_TEXT_RQREG}\"\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_BRANCH\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_BRANCH}\\3\"${VERSION_BRANCH_RQREG}${VERSION_DIRTY}\"\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_DATE\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_DATE}\\3\"${VERSION_DATE_RQREG}\"\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_SHORTDATE\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_SHORTDATE}\\3\"${VERSION_SHORTDATE}\"\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_UNIXTIME\w*)(\s+)([0-9]+L?L?)(.*)$/\\1${NAME_VERSION_UNIXTIME}\\3${VERSION_UNIXTIME}LL\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_HOSTINFO\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_HOSTINFO}\\3\"${VERSION_HOSTINFO_RQREG}\"\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_AUTHORSHIP\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_AUTHORSHIP}\\3\"${VERSION_AUTHORSHIP_RQREG}\"\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_DECLARATION\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_DECLARATION}\\3\"${VERSION_DECLARATION_RQREG}\"\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_COMMIT_AUTHOR\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_COMMIT_AUTHOR}\\3\"${VERSION_COMMIT_AUTHOR_RQREG} <${VERSION_COMMIT_EMAIL_RQREG}>\"\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_SHA_SHORT\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_SHA_SHORT}\\3\"${VERSION_SHA_SHORT}\"\\5/" \
		-e "s/^(\s*#\s*define\s+)(\w*VERSION_SHA_LONG\w*)(\s+)(\".*\")(.*)$/\\1${NAME_VERSION_SHA_LONG}\\3\"${VERSION_SHA_LONG}\"\\5/" \
	| __STORE_NATIVE_EOL__ "$1"
}
